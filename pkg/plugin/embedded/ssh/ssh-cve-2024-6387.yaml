# SSH CVE-2024-6387: regreSSHion - OpenSSH Signal Handler Race Condition RCE
#
# References:
# - https://nvd.nist.gov/vuln/detail/CVE-2024-6387
# - https://www.qualys.com/2024/07/01/cve-2024-6387/regresshion.txt
# - https://www.openssh.com/security.html
#
# Affected Versions:
# - OpenSSH versions < 4.4p1 (original vulnerability)
# - OpenSSH versions >= 8.5p1 and < 9.8p1 (regression)
#
# Detection Method: SSH banner version parsing

name: "OpenSSH CVE-2024-6387 (regreSSHion)"
version: "1.0.3"
type: evaluation
author: "pentora-security"

metadata:
  severity: critical
  category: ssh
  cve: "CVE-2024-6387"
  cvss_score: 8.1
  cvss_vector: "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:H"
  description: "Signal handler race condition in OpenSSH's server (sshd) allows remote unauthenticated code execution"
  impact: "Unauthenticated remote attackers can execute arbitrary code with root privileges by exploiting a race condition in the signal handler"
  references:
    - "https://nvd.nist.gov/vuln/detail/CVE-2024-6387"
    - "https://www.qualys.com/2024/07/01/cve-2024-6387/regresshion.txt"
    - "https://www.openssh.com/security.html"
    - "https://access.redhat.com/security/cve/CVE-2024-6387"
  tags:
    - rce
    - signal-handler
    - race-condition
    - unauthenticated
    - critical

# Trigger when SSH version information is available
triggers:
  - data_key: "ssh.version"
    condition: exists
    value: true
  - data_key: "ssh.banner"
    condition: exists
    value: true

# Match vulnerable OpenSSH versions
match:
  logic: OR
  rules:
    # Original vulnerability: OpenSSH < 4.4p1
    - field: "ssh.version"
      operator: "matches"
      value: "^OpenSSH_([0-3]\\.|4\\.[0-3])"
      description: "OpenSSH versions < 4.4p1 (original vulnerability)"

    # Regression: OpenSSH 8.5p1 - 9.7p1
    - field: "ssh.version"
      operator: "matches"
      value: "^OpenSSH_(8\\.(5|6|7|8|9)|9\\.[0-7])p"
      description: "OpenSSH 8.5p1 - 9.7p1 (regression)"

    # Alternative banner format check
    - field: "ssh.banner"
      operator: "contains"
      value: "OpenSSH_8.5"
    - field: "ssh.banner"
      operator: "contains"
      value: "OpenSSH_8.6"
    - field: "ssh.banner"
      operator: "contains"
      value: "OpenSSH_8.7"
    - field: "ssh.banner"
      operator: "contains"
      value: "OpenSSH_8.8"
    - field: "ssh.banner"
      operator: "contains"
      value: "OpenSSH_8.9"
    - field: "ssh.banner"
      operator: "contains"
      value: "OpenSSH_9.0"
    - field: "ssh.banner"
      operator: "contains"
      value: "OpenSSH_9.1"
    - field: "ssh.banner"
      operator: "contains"
      value: "OpenSSH_9.2"
    - field: "ssh.banner"
      operator: "contains"
      value: "OpenSSH_9.3"
    - field: "ssh.banner"
      operator: "contains"
      value: "OpenSSH_9.4"
    - field: "ssh.banner"
      operator: "contains"
      value: "OpenSSH_9.5"
    - field: "ssh.banner"
      operator: "contains"
      value: "OpenSSH_9.6"
    - field: "ssh.banner"
      operator: "contains"
      value: "OpenSSH_9.7"

output:
  vulnerability: true
  severity: critical
  message: "OpenSSH server vulnerable to CVE-2024-6387 (regreSSHion) - Signal handler race condition allows unauthenticated remote code execution"
  remediation: |
    IMMEDIATE ACTION REQUIRED:

    1. Upgrade OpenSSH to version 9.8p1 or later immediately
    2. If immediate patching is not possible, implement network-level access controls:
       - Restrict SSH access to trusted IP addresses only
       - Use VPN or bastion host for SSH access
       - Enable fail2ban or similar brute-force protection

    3. Verify patch installation:
       ssh -V  # Should show OpenSSH_9.8p1 or later

    4. Distribution-specific updates:
       - RHEL/CentOS: sudo yum update openssh-server
       - Ubuntu/Debian: sudo apt update && sudo apt upgrade openssh-server
       - FreeBSD: pkg upgrade openssh-portable

    5. Restart SSH service after upgrade:
       sudo systemctl restart sshd

    6. Monitor logs for exploitation attempts:
       - Look for repeated connection attempts
       - Unusual pre-authentication failures
       - Check /var/log/auth.log or /var/log/secure

    7. Consider additional hardening:
       - Disable password authentication (use key-based only)
       - Enable two-factor authentication
       - Use non-standard SSH port (security through obscurity)
       - Limit LoginGraceTime to 30 seconds in sshd_config

    For more information:
    - https://www.openssh.com/security.html
    - https://www.qualys.com/2024/07/01/cve-2024-6387/regresshion.txt
