// pkg/engine/proto/module_api.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: pkg/engine/proto/module_api.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ExecuteRequest is the message Pentora sends to an external module to start its execution.
type ExecuteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Identifier for the overall scan job or session, useful for logging and context.
	ScanId string `protobuf:"bytes,1,opt,name=scan_id,json=scanId,proto3" json:"scan_id,omitempty"`
	// Unique identifier for this specific instance of the module within the current DAG.
	// This helps the module understand its specific role if multiple instances of the same module type exist.
	InstanceId string `protobuf:"bytes,2,opt,name=instance_id,json=instanceId,proto3" json:"instance_id,omitempty"`
	// Input data for the module, typically outputs from its dependency modules in the DAG.
	// The key is the `data_key` (e.g., "discovery.live_hosts") and the value is the data itself,
	// serialized into bytes (e.g., as JSON).
	Inputs map[string][]byte `protobuf:"bytes,3,rep,name=inputs,proto3" json:"inputs,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Module-specific configuration.
	// Keys are configuration parameter names, and values are their string representations.
	// For complex configurations (nested objects, arrays), the value for a key could be a JSON string.
	ModuleConfig map[string]string `protobuf:"bytes,4,rep,name=module_config,json=moduleConfig,proto3" json:"module_config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Optional: A list of `data_key`s that Pentora (orchestrator) expects this module to produce.
	// This can help the module optimize or validate its output.
	ExpectedOutputKeys []string `protobuf:"bytes,5,rep,name=expected_output_keys,json=expectedOutputKeys,proto3" json:"expected_output_keys,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ExecuteRequest) Reset() {
	*x = ExecuteRequest{}
	mi := &file_pkg_engine_proto_module_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteRequest) ProtoMessage() {}

func (x *ExecuteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_engine_proto_module_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteRequest.ProtoReflect.Descriptor instead.
func (*ExecuteRequest) Descriptor() ([]byte, []int) {
	return file_pkg_engine_proto_module_api_proto_rawDescGZIP(), []int{0}
}

func (x *ExecuteRequest) GetScanId() string {
	if x != nil {
		return x.ScanId
	}
	return ""
}

func (x *ExecuteRequest) GetInstanceId() string {
	if x != nil {
		return x.InstanceId
	}
	return ""
}

func (x *ExecuteRequest) GetInputs() map[string][]byte {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *ExecuteRequest) GetModuleConfig() map[string]string {
	if x != nil {
		return x.ModuleConfig
	}
	return nil
}

func (x *ExecuteRequest) GetExpectedOutputKeys() []string {
	if x != nil {
		return x.ExpectedOutputKeys
	}
	return nil
}

// OutputData represents a single piece of structured data produced by an external module.
// This is streamed back to Pentora as part of an ExecuteResponse.
type OutputData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The key identifying this specific piece of data (e.g., "discovery.live_hosts", "service.banner.ssh").
	// This should align with one of the keys declared in the module's `Produces` metadata.
	DataKey string `protobuf:"bytes,1,opt,name=data_key,json=dataKey,proto3" json:"data_key,omitempty"`
	// The actual data payload, serialized into bytes (e.g., JSON, plain text, or other binary formats).
	// Pentora's orchestrator or subsequent modules will need to know how to deserialize this.
	Data []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	// If an error occurred while trying to produce this specific piece of data,
	// the error message can be included here. The main RPC might still succeed overall
	// if the module can continue or produce other valid outputs.
	ErrorMessage string `protobuf:"bytes,3,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	// Unix timestamp (seconds since epoch) indicating when this data was generated.
	Timestamp int64 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// The specific target (e.g., IP address, hostname, URL) to which this data pertains, if applicable.
	Target        string `protobuf:"bytes,5,opt,name=target,proto3" json:"target,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OutputData) Reset() {
	*x = OutputData{}
	mi := &file_pkg_engine_proto_module_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OutputData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OutputData) ProtoMessage() {}

func (x *OutputData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_engine_proto_module_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OutputData.ProtoReflect.Descriptor instead.
func (*OutputData) Descriptor() ([]byte, []int) {
	return file_pkg_engine_proto_module_api_proto_rawDescGZIP(), []int{1}
}

func (x *OutputData) GetDataKey() string {
	if x != nil {
		return x.DataKey
	}
	return ""
}

func (x *OutputData) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *OutputData) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *OutputData) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *OutputData) GetTarget() string {
	if x != nil {
		return x.Target
	}
	return ""
}

// ExecuteResponse is a message streamed from the external module back to Pentora.
// Each message typically contains one piece of OutputData.
type ExecuteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Output        *OutputData            `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecuteResponse) Reset() {
	*x = ExecuteResponse{}
	mi := &file_pkg_engine_proto_module_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecuteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecuteResponse) ProtoMessage() {}

func (x *ExecuteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_engine_proto_module_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecuteResponse.ProtoReflect.Descriptor instead.
func (*ExecuteResponse) Descriptor() ([]byte, []int) {
	return file_pkg_engine_proto_module_api_proto_rawDescGZIP(), []int{2}
}

func (x *ExecuteResponse) GetOutput() *OutputData {
	if x != nil {
		return x.Output
	}
	return nil
}

var File_pkg_engine_proto_module_api_proto protoreflect.FileDescriptor

const file_pkg_engine_proto_module_api_proto_rawDesc = "" +
	"\n" +
	"!pkg/engine/proto/module_api.proto\x12\x06engine\"\x83\x03\n" +
	"\x0eExecuteRequest\x12\x17\n" +
	"\ascan_id\x18\x01 \x01(\tR\x06scanId\x12\x1f\n" +
	"\vinstance_id\x18\x02 \x01(\tR\n" +
	"instanceId\x12:\n" +
	"\x06inputs\x18\x03 \x03(\v2\".engine.ExecuteRequest.InputsEntryR\x06inputs\x12M\n" +
	"\rmodule_config\x18\x04 \x03(\v2(.engine.ExecuteRequest.ModuleConfigEntryR\fmoduleConfig\x120\n" +
	"\x14expected_output_keys\x18\x05 \x03(\tR\x12expectedOutputKeys\x1a9\n" +
	"\vInputsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\fR\x05value:\x028\x01\x1a?\n" +
	"\x11ModuleConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x96\x01\n" +
	"\n" +
	"OutputData\x12\x19\n" +
	"\bdata_key\x18\x01 \x01(\tR\adataKey\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12#\n" +
	"\rerror_message\x18\x03 \x01(\tR\ferrorMessage\x12\x1c\n" +
	"\ttimestamp\x18\x04 \x01(\x03R\ttimestamp\x12\x16\n" +
	"\x06target\x18\x05 \x01(\tR\x06target\"=\n" +
	"\x0fExecuteResponse\x12*\n" +
	"\x06output\x18\x01 \x01(\v2\x12.engine.OutputDataR\x06output2V\n" +
	"\x16ModuleExecutionService\x12<\n" +
	"\aExecute\x12\x16.engine.ExecuteRequest\x1a\x17.engine.ExecuteResponse0\x01B0Z.github.com/pentora-ai/pentora/pkg/engine/protob\x06proto3"

var (
	file_pkg_engine_proto_module_api_proto_rawDescOnce sync.Once
	file_pkg_engine_proto_module_api_proto_rawDescData []byte
)

func file_pkg_engine_proto_module_api_proto_rawDescGZIP() []byte {
	file_pkg_engine_proto_module_api_proto_rawDescOnce.Do(func() {
		file_pkg_engine_proto_module_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_engine_proto_module_api_proto_rawDesc), len(file_pkg_engine_proto_module_api_proto_rawDesc)))
	})
	return file_pkg_engine_proto_module_api_proto_rawDescData
}

var file_pkg_engine_proto_module_api_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pkg_engine_proto_module_api_proto_goTypes = []any{
	(*ExecuteRequest)(nil),  // 0: engine.ExecuteRequest
	(*OutputData)(nil),      // 1: engine.OutputData
	(*ExecuteResponse)(nil), // 2: engine.ExecuteResponse
	nil,                     // 3: engine.ExecuteRequest.InputsEntry
	nil,                     // 4: engine.ExecuteRequest.ModuleConfigEntry
}
var file_pkg_engine_proto_module_api_proto_depIdxs = []int32{
	3, // 0: engine.ExecuteRequest.inputs:type_name -> engine.ExecuteRequest.InputsEntry
	4, // 1: engine.ExecuteRequest.module_config:type_name -> engine.ExecuteRequest.ModuleConfigEntry
	1, // 2: engine.ExecuteResponse.output:type_name -> engine.OutputData
	0, // 3: engine.ModuleExecutionService.Execute:input_type -> engine.ExecuteRequest
	2, // 4: engine.ModuleExecutionService.Execute:output_type -> engine.ExecuteResponse
	4, // [4:5] is the sub-list for method output_type
	3, // [3:4] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_pkg_engine_proto_module_api_proto_init() }
func file_pkg_engine_proto_module_api_proto_init() {
	if File_pkg_engine_proto_module_api_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_engine_proto_module_api_proto_rawDesc), len(file_pkg_engine_proto_module_api_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_engine_proto_module_api_proto_goTypes,
		DependencyIndexes: file_pkg_engine_proto_module_api_proto_depIdxs,
		MessageInfos:      file_pkg_engine_proto_module_api_proto_msgTypes,
	}.Build()
	File_pkg_engine_proto_module_api_proto = out.File
	file_pkg_engine_proto_module_api_proto_goTypes = nil
	file_pkg_engine_proto_module_api_proto_depIdxs = nil
}
